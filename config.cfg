[main]
##########################################
# ====hosts====
# <host A>, <host B>: <host A>, <host B>, <host B>
#  |____|    |____|
#    |         |
#   PM        PM
#|_________________| 
#         |
#       Group
#
#(1.a) if "destination" option not set AND vms not set:
#     - A group should only have two machine
#     - Script assumes that machines on one host in the pair are
#       to be moved to the other host in the pair
#     - The "grouping" method specified is used to swap all VMs
#       between pairs
#      
#(1.b) if "destination" is set AND vms not set:
#     - Any machines present on the PMs in a group will be treated
#       as a single unit to me moved to the destination PM
#      
#(1.c) if "destination" is not set AND vms is set:
#     - Preforms like (1.a) but only with the vms specified
#      
#(1.d) if "destination" is  set AND vms is set:
#     - VMs are searched for on the hosts specified
#     - Executes like (1.b) but with only with the vms specified
#
##########################################
#hosts=cpu-0-2,cpu-0-9:cpu-0-3,cpu-0-10:cpu-0-4,cpu-0-11:cpu-0-5,cpu-0-12
hosts=cpu-0-2,cpu-0-9

#destination=cpu-0-10

##########################################
#====vms====
#(2.a) if hosts not set AND destination not set:
#     - Will migrate VMs to destination provided by commandline
#     - if not destination provided to CLI, then script will abort
#
#(2.b) if hosts not set AND destination is set:
#     - Migrates VMs specified to the destination using the options specified

#vms=centVM-0-2-00,centVM-0-2-00

[options]
bandwidth=1000
grouping=parallel
storage=true

[benchmarking]
enable=true
benchmark=allmigrate
iterations=2
output=benchmark_results.csv

